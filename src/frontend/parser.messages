main: BHORZGRP HORZCMD LPAREN TYPE

Expected expression or `)`.

main: BLIST VAR TYPE

Expected expression, `;`, or `]`.

main: BLIST TYPE
main: BLIST VAR LISTPUNCT TYPE

Expected expression or `]`.

main: BVERTGRP VERTCMD WITH
main: BHORZGRP HORZCMD WITH
main: BHORZGRP HORZCMD OMISSION WITH

BUG: expected `(`, `(|`, `[`, `?:`, `?*`, `{`, `<`, or `;`.

main: BHORZGRP HORZCMD OPTIONAL OPTIONAL

Expected `(`, `(|`, or `[`.

main: BVERTGRP VARINVERT LPAREN
main: BHORZGRP VARINHORZ LPAREN

Expected `;`.

main: BVERTGRP BVERTGRP
main: BVERTGRP VERTCMD ENDACTIVE EOI
main: BMATHGRP MATHCMD BVERTGRP BVERTGRP
main: BHORZGRP HORZCMD BVERTGRP BVERTGRP

Expected `+command` or `>`.

main: BHORZGRP HORZCMD BHORZGRP EHORZGRP LITERAL

Expected text, escape, `\command`, `#variable`, `${`, `{`, `<`, or `}`.

main: BHORZGRP ITEM SPACE SEP
main: BHORZGRP ITEM SEP

Expected text, escape, `\command`, `#variable`, `${`, `*`, or `}`.

main: BHORZGRP SEP SEP ITEM
main: BHORZGRP SEP SPACE ITEM
main: BHORZGRP SEP ITEM

Expected text, escape, `\command`, `#variable`, `${`, `|`, or `}`.

main: BHORZGRP BHORZGRP
main: BHORZGRP SPACE BHORZGRP
main: BMATHGRP MATHCMD BHORZGRP BHORZGRP
main: BHORZGRP HORZCMD BHORZGRP BHORZGRP

Expected text, escape, `\command`, `#variable`, `${`, `*`, `|`, or `}`.

main: BHORZGRP VARINHORZ ENDACTIVE BHORZGRP
main: BHORZGRP SPACE VARINHORZ ENDACTIVE BHORZGRP

Expected text, escape, `\command`, `#variable`, `${`, or `}`.

main: BHORZGRP SPACE ITEM
main: BMATHGRP MATHCMD BHORZGRP SPACE ITEM
main: BHORZGRP HORZCMD BHORZGRP SPACE ITEM

BUG: unexpected space after `{`

main: BHORZGRP BMATHGRP SUPERSCRIPT
main: BMATHGRP SUPERSCRIPT
main: BMATHGRP MATHCMD BMATHGRP SUPERSCRIPT

Expected math expression.

main: BMATHGRP MATHCMD OMISSION WITH
main: BMATHGRP MATHCMD WITH

BUG: unexpected token in math mode

main: BMATHGRP MATHCHAR SUPERSCRIPT MATHCHAR LPAREN
main: BMATHGRP MATHCHAR SUPERSCRIPT BMATHGRP LPAREN

Expected character, number, symbol, escape, `\command`, `#variable`, or `}`.

main: BMATHGRP MATHCHAR SUBSCRIPT MATHCHAR LPAREN

Expected character, number, symbol, escape, `\command`, `#variable`, `^`, or `}`.

main: BMATHGRP MATHCHAR LPAREN

Expected character, number, symbol, escape, `\command`, `#variable`, `_`, `^`, or `}`.

main: BMATHGRP MATHCHAR SUBSCRIPT LPAREN
main: BMATHGRP MATHCHAR SUPERSCRIPT LPAREN

Expected character, number, symbol, escape, `\command`, `#variable`, or `{`.







main: BPATH VAR PATHCURVE CONTROLS VAR LETAND VAR PATHCURVE VAR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: BPATH VAR PATHCURVE CONTROLS VAR LETAND VAR PATHCURVE WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: BPATH VAR PATHCURVE CONTROLS VAR LETAND VAR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: BPATH VAR PATHCURVE CONTROLS VAR LETAND WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: BPATH VAR PATHCURVE CONTROLS VAR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: BPATH VAR PATHCURVE CONTROLS WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: BPATH VAR PATHCURVE WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: BPATH VAR PATHLINE CYCLE WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: BPATH VAR PATHLINE VAR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: BPATH VAR PATHLINE WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: BPATH VAR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: BPATH WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: BRECORD VAR DEFEQ CONSTRUCTOR LISTPUNCT WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: BRECORD VAR DEFEQ CONSTRUCTOR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: BRECORD VAR DEFEQ WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: BRECORD VAR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: BRECORD WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: COMMAND WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: CONSTRUCTOR WHILE

<YOUR SYNTAX ERROR MESSAGE HERE>

main: CONSTRUCTOR VAR VAR

<YOUR SYNTAX ERROR MESSAGE HERE>

main: DEREF VAR WHILE

<YOUR SYNTAX ERROR MESSAGE HERE>

main: DEREF WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: EXACT_MINUS VAR OMISSION WHILE

<YOUR SYNTAX ERROR MESSAGE HERE>

main: EXACT_MINUS WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: HEADER_REQUIRE WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: IF VAR THEN VAR ELSE WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: IF VAR THEN VAR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: IF VAR THEN WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: IF VAR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: IF WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LAMBDA ARROW WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LAMBDA VAR DEFEQ

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LAMBDA VAR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LAMBDA WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETHORZ HORZCMD DEFEQ WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETHORZ HORZCMD VAR ARROW

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETHORZ HORZCMD WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETHORZ VAR HORZCMD DEFEQ WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETHORZ VAR HORZCMD WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETHORZ VAR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETHORZ WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETMATH HORZCMD DEFEQ WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETMATH HORZCMD VAR ARROW

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETMATH HORZCMD WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETMATH WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETMUTABLE VAR OVERWRITEEQ WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETMUTABLE VAR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETMUTABLE WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETNONREC BLIST WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETNONREC LPAREN CONSTRUCTOR VAR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETNONREC LPAREN CONSTRUCTOR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETNONREC LPAREN MOD WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETNONREC LPAREN VAR AS WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETNONREC LPAREN VAR COMMA VAR COMMA WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETNONREC LPAREN VAR COMMA VAR WHEN

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETNONREC LPAREN VAR COMMA WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETNONREC LPAREN VAR CONS WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETNONREC LPAREN VAR WHEN

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETNONREC LPAREN VAR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETNONREC LPAREN WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETNONREC VAR BAR VAR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETNONREC VAR BAR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETNONREC VAR COLON VAR BAR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETNONREC VAR COLON VAR VAL

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETNONREC VAR COLON WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETNONREC VAR DEFEQ WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETNONREC VAR OPTIONAL LPAREN MOD WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETNONREC VAR OPTIONAL LPAREN WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETNONREC VAR OPTIONAL WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETNONREC VAR VAR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETNONREC VAR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETNONREC WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC LPAREN MOD RPAREN DEFEQ VAR BAR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC LPAREN MOD RPAREN DEFEQ VAR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC LPAREN MOD RPAREN DEFEQ WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC LPAREN MOD RPAREN VAR ARROW

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC LPAREN MOD RPAREN WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC LPAREN MOD WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC LPAREN WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC VAR BAR VAR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC VAR BAR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC VAR COLON BLIST ELIST HORZCMDTYPE WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC VAR COLON BLIST ELIST WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC VAR COLON BLIST VAR ARROW TYPEVAR VAL

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC VAR COLON BLIST VAR LISTPUNCT WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC VAR COLON BLIST VAR OPTIONALTYPE LISTPUNCT WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC VAR COLON BLIST VAR OPTIONALTYPE WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC VAR COLON BLIST VAR VAL

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC VAR COLON BLIST WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC VAR COLON BRECORD VAR COLON VAR LISTPUNCT WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC VAR COLON BRECORD VAR COLON VAR VAL

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC VAR COLON BRECORD VAR COLON WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC VAR COLON BRECORD VAR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC VAR COLON BRECORD WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC VAR COLON LPAREN VAR RPAREN WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC VAR COLON LPAREN VAR VAL

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC VAR COLON LPAREN WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC VAR COLON TYPEVAR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC VAR COLON VAR ARROW WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC VAR COLON VAR BAR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC VAR COLON VAR EXACT_TIMES BLIST ELIST HORZCMDTYPE WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC VAR COLON VAR EXACT_TIMES VAR EXACT_TIMES WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC VAR COLON VAR EXACT_TIMES WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC VAR COLON VAR LPAREN VAR RPAREN WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC VAR COLON VAR LPAREN VAR VAL

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC VAR COLON VAR LPAREN WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC VAR COLON VAR OPTIONALTYPE ARROW WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC VAR COLON VAR OPTIONALTYPE WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC VAR COLON VAR TYPEVAR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC VAR COLON VAR VAL

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC VAR COLON VAR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC VAR COLON WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC VAR DEFEQ VAR BAR DEFEQ VAR BAR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC VAR DEFEQ VAR BAR DEFEQ VAR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC VAR DEFEQ VAR BAR DEFEQ WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC VAR DEFEQ VAR BAR VAR ARROW

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC VAR DEFEQ VAR BAR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC VAR DEFEQ VAR LETAND WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC VAR DEFEQ VAR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC VAR DEFEQ WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC VAR VAR ARROW

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC VAR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETVERT VAR VERTCMD DEFEQ WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETVERT VAR VERTCMD WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETVERT VAR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETVERT VERTCMD DEFEQ WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETVERT VERTCMD VAR ARROW

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETVERT VERTCMD WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETVERT WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LNOT VAR OMISSION WHILE

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LNOT WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LPAREN EXACT_MINUS WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LPAREN LNOT WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LPAREN MOD WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LPAREN VAR COMMA WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LPAREN VAR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LPAREN WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: MODULE CONSTRUCTOR COLON SIG DIRECT HORZCMD COLON VAR RPAREN

<YOUR SYNTAX ERROR MESSAGE HERE>

main: MODULE CONSTRUCTOR COLON SIG DIRECT HORZCMD COLON WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: MODULE CONSTRUCTOR COLON SIG DIRECT HORZCMD WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: MODULE CONSTRUCTOR COLON SIG DIRECT VERTCMD COLON VAR RPAREN

<YOUR SYNTAX ERROR MESSAGE HERE>

main: MODULE CONSTRUCTOR COLON SIG DIRECT VERTCMD COLON WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: MODULE CONSTRUCTOR COLON SIG DIRECT VERTCMD WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: MODULE CONSTRUCTOR COLON SIG DIRECT WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: MODULE CONSTRUCTOR COLON SIG END WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: MODULE CONSTRUCTOR COLON SIG TYPE VAR CONSTRAINT TYPEVAR CONS BRECORD VAR COLON TYPEVAR ERECORD MODULE

<YOUR SYNTAX ERROR MESSAGE HERE>

main: MODULE CONSTRUCTOR COLON SIG TYPE VAR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: MODULE CONSTRUCTOR COLON SIG TYPE WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: MODULE CONSTRUCTOR COLON SIG VAL HORZCMD COLON VAR RPAREN

<YOUR SYNTAX ERROR MESSAGE HERE>

main: MODULE CONSTRUCTOR COLON SIG VAL HORZCMD COLON WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: MODULE CONSTRUCTOR COLON SIG VAL HORZCMD WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: MODULE CONSTRUCTOR COLON SIG VAL VAR COLON VAR RPAREN

<YOUR SYNTAX ERROR MESSAGE HERE>

main: MODULE CONSTRUCTOR COLON SIG VAL VAR COLON WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: MODULE CONSTRUCTOR COLON SIG VAL VAR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: MODULE CONSTRUCTOR COLON SIG VAL VERTCMD COLON VAR RPAREN

<YOUR SYNTAX ERROR MESSAGE HERE>

main: MODULE CONSTRUCTOR COLON SIG VAL VERTCMD COLON WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: MODULE CONSTRUCTOR COLON SIG VAL VERTCMD WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: MODULE CONSTRUCTOR COLON SIG VAL WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: MODULE CONSTRUCTOR COLON SIG WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: MODULE CONSTRUCTOR COLON WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: MODULE CONSTRUCTOR DEFEQ STRUCT TYPE VAR DEFEQ TYPEVAR IN

<YOUR SYNTAX ERROR MESSAGE HERE>

main: MODULE CONSTRUCTOR DEFEQ STRUCT WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: MODULE CONSTRUCTOR DEFEQ WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: MODULE CONSTRUCTOR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: MODULE WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: TYPE TYPEVAR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: TYPE VAR DEFEQ BAR CONSTRUCTOR CONSTRAINT TYPEVAR CONS BRECORD VAR COLON TYPEVAR ERECORD VAL

<YOUR SYNTAX ERROR MESSAGE HERE>

main: TYPE VAR DEFEQ BAR CONSTRUCTOR LETAND WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: TYPE VAR DEFEQ BAR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: TYPE VAR DEFEQ CONSTRUCTOR BAR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: TYPE VAR DEFEQ CONSTRUCTOR CONSTRAINT TYPEVAR CONS BRECORD VAR COLON TYPEVAR ERECORD VAL

<YOUR SYNTAX ERROR MESSAGE HERE>

main: TYPE VAR DEFEQ CONSTRUCTOR LETAND WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: TYPE VAR DEFEQ CONSTRUCTOR OF VAR BAR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: TYPE VAR DEFEQ CONSTRUCTOR OF VAR VAL

<YOUR SYNTAX ERROR MESSAGE HERE>

main: TYPE VAR DEFEQ CONSTRUCTOR OF WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: TYPE VAR DEFEQ CONSTRUCTOR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: TYPE VAR DEFEQ TYPEVAR END

<YOUR SYNTAX ERROR MESSAGE HERE>

main: TYPE VAR DEFEQ TYPEVAR IN VAR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: TYPE VAR DEFEQ TYPEVAR IN WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: TYPE VAR DEFEQ VAR CONSTRAINT TYPEVAR CONS BRECORD VAR COLON TYPEVAR ERECORD VAL

<YOUR SYNTAX ERROR MESSAGE HERE>

main: TYPE VAR DEFEQ VAR CONSTRAINT TYPEVAR CONS BRECORD VAR COLON TYPEVAR ERECORD WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: TYPE VAR DEFEQ VAR CONSTRAINT TYPEVAR CONS BRECORD WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: TYPE VAR DEFEQ VAR CONSTRAINT TYPEVAR CONS WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: TYPE VAR DEFEQ VAR CONSTRAINT TYPEVAR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: TYPE VAR DEFEQ VAR CONSTRAINT WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: TYPE VAR DEFEQ VAR LETAND WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: TYPE VAR DEFEQ VAR VAL

<YOUR SYNTAX ERROR MESSAGE HERE>

main: TYPE VAR DEFEQ WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: TYPE VAR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: TYPE WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: VAR OVERWRITEEQ WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: VAR WHILE

<YOUR SYNTAX ERROR MESSAGE HERE>

main: WHILE LETVERT VERTCMD DEFEQ CONSTRUCTOR IN WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: WHILE LETVERT VERTCMD DEFEQ CONSTRUCTOR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: WHILE MATCH VAR TYPE

<YOUR SYNTAX ERROR MESSAGE HERE>

main: WHILE MATCH VAR WITH BAR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: WHILE MATCH VAR WITH VAR ARROW VAR BAR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: WHILE MATCH VAR WITH VAR ARROW WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: WHILE MATCH VAR WITH VAR RPAREN

<YOUR SYNTAX ERROR MESSAGE HERE>

main: WHILE MATCH VAR WITH VAR WHEN VAR ARROW VAR BAR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: WHILE MATCH VAR WITH VAR WHEN VAR ARROW WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: WHILE MATCH VAR WITH VAR WHEN VAR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: WHILE MATCH VAR WITH VAR WHEN WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: WHILE MATCH VAR WITH WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: WHILE MATCH WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: WHILE VAR DO WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: WHILE VAR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: WHILE WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: VAR ACCESS WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: VAR BEFORE WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: VAR BINOP_AMP WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: VAR BINOP_BAR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: VAR BINOP_DIVIDES WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: VAR BINOP_EQ WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: VAR BINOP_GT WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: VAR BINOP_HAT WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: VAR BINOP_LT WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: VAR BINOP_MINUS WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: VAR BINOP_PLUS VAR BINOP_MINUS WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: VAR BINOP_PLUS VAR BINOP_PLUS WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: VAR BINOP_PLUS VAR EXACT_MINUS WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: VAR BINOP_PLUS WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: VAR BINOP_TIMES WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: VAR CONS WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: VAR EXACT_MINUS WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: VAR EXACT_TIMES WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: VAR MOD VAR BINOP_DIVIDES WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: VAR MOD VAR BINOP_TIMES WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: VAR MOD VAR EXACT_TIMES WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: VAR MOD VAR MOD WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: VAR MOD VAR OMISSION WHILE

<YOUR SYNTAX ERROR MESSAGE HERE>

main: VAR MOD WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: VAR OMISSION WHILE

<YOUR SYNTAX ERROR MESSAGE HERE>

main: VAR OPTIONAL VAR WHILE

<YOUR SYNTAX ERROR MESSAGE HERE>

main: VAR OPTIONAL WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: WILDCARD WHILE

<YOUR SYNTAX ERROR MESSAGE HERE>

main: VAR VAR WHILE

<YOUR SYNTAX ERROR MESSAGE HERE>

main: VAR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: WITH

<YOUR SYNTAX ERROR MESSAGE HERE>
