main: HEADER_REQUIRE WITH
main: WITH

Expected declaration, header, or expression.

main: TYPE VAR DEFEQ TYPEVAR END

Expected declaration or `in`.

main: MODULE CONSTRUCTOR DEFEQ STRUCT TYPE VAR DEFEQ TYPEVAR IN
main: MODULE CONSTRUCTOR DEFEQ STRUCT WITH

Expected declaration.

main: TYPE VAR DEFEQ TYPEVAR IN TYPE
main: WHILE LETVERT VERTCMD DEFEQ VAR IN TYPE
main: WHILE MATCH VAR WITH VAR ARROW TYPE
main: WHILE MATCH TYPE
main: IF VAR THEN VAR ELSE TYPE
main: IF VAR THEN TYPE
main: IF TYPE
main: WHILE VAR DO TYPE
main: WHILE TYPE
main: LAMBDA ARROW TYPE
main: LETHORZ HORZCMD DEFEQ TYPE
main: LETHORZ VAR HORZCMD DEFEQ TYPE
main: LETMATH HORZCMD DEFEQ TYPE
main: LETMUTABLE VAR OVERWRITEEQ TYPE
main: LETREC VAR DEFEQ VAR BAR DEFEQ TYPE
main: LETREC VAR DEFEQ TYPE
main: LETVERT VAR VERTCMD DEFEQ TYPE
main: LETVERT VERTCMD DEFEQ TYPE
main: VAR BEFORE TYPE
main: VAR BINOP_AMP TYPE
main: VAR BINOP_BAR TYPE
main: VAR BINOP_DIVIDES TYPE
main: VAR BINOP_EQ TYPE
main: VAR BINOP_GT TYPE
main: VAR BINOP_HAT TYPE
main: VAR BINOP_LT TYPE
main: VAR BINOP_MINUS TYPE
main: VAR BINOP_PLUS VAR BINOP_MINUS TYPE
main: VAR BINOP_PLUS VAR BINOP_PLUS TYPE
main: VAR BINOP_PLUS VAR EXACT_MINUS TYPE
main: VAR BINOP_PLUS TYPE
main: VAR BINOP_TIMES TYPE
main: VAR CONS TYPE
main: VAR EXACT_MINUS TYPE
main: VAR EXACT_TIMES TYPE
main: VAR MOD VAR BINOP_DIVIDES TYPE
main: VAR MOD VAR BINOP_TIMES TYPE
main: VAR MOD VAR EXACT_TIMES TYPE
main: VAR MOD VAR MOD TYPE
main: VAR MOD TYPE
main: VAR OPTIONAL TYPE
main: LNOT TYPE
main: DEREF TYPE
main: EXACT_MINUS TYPE
main: VAR OVERWRITEEQ TYPE
main: BPATH VAR PATHCURVE CONTROLS VAR LETAND TYPE
main: BPATH VAR PATHCURVE CONTROLS TYPE
main: BPATH TYPE

Expected expression.

main: TYPE VAR DEFEQ TYPEVAR IN VAR WITH
main: CONSTRUCTOR WHILE
main: CONSTRUCTOR VAR VAR
main: DEREF VAR WHILE
main: EXACT_MINUS VAR OMISSION WHILE
main: LNOT VAR OMISSION WHILE
main: VAR MOD VAR OMISSION WHILE
main: VAR OMISSION WHILE
main: VAR OPTIONAL VAR WHILE
main: VAR WHILE
main: VAR VAR WHILE
main: LPAREN RPAREN WHILE
main: VAR TYPE

Expected continued expression.

main: WHILE LETVERT VERTCMD DEFEQ VAR TYPE

Expected continued expression or `in`.

main: WHILE MATCH VAR TYPE

Expected continued expression or `with`.

main: IF VAR THEN VAR TYPE

Expected continued expression or `else`.

main: IF VAR TYPE

Expected continued expression or `then`.

main: WHILE VAR TYPE

Expected continued expression or `do`.

main: COMMAND TYPE

Expected `\command`.

main: VAR ACCESS TYPE

Expected identifier.

main: LPAREN MOD TYPE

Expected `)`.

main: LPAREN EXACT_MINUS TYPE
main: LPAREN LNOT TYPE

Expected expression or `)`.

main: LPAREN VAR TYPE

Expected continued expression, `,` or `)`.

main: LPAREN TYPE

Expected expression, operator or `)`.

main: BHORZGRP HORZCMD LPAREN TYPE
main: LPAREN VAR COMMA TYPE

Expected expression or `)`.

main: BRECORD VAR TYPE

Expected `=`.

main: BRECORD VAR DEFEQ TYPE

Expected expression.

main: BRECORD VAR DEFEQ VAR TYPE

Expected continued expression, `;`, or `|)`.

main: BRECORD TYPE
main: BRECORD VAR DEFEQ VAR LISTPUNCT TYPE

Expected identifier or `|)`.

main: BLIST VAR TYPE

Expected continued expression, `;`, or `]`.

main: BLIST TYPE
main: BLIST VAR LISTPUNCT TYPE

Expected expression or `]`.

main: BPATH VAR PATHCURVE CONTROLS VAR LETAND VAR PATHCURVE VAR TYPE
main: BPATH VAR PATHLINE VAR TYPE
main: BPATH VAR TYPE

Expected continued expression, `--`, `..`, or `]>`.

main: BPATH VAR PATHCURVE CONTROLS VAR LETAND VAR PATHCURVE TYPE
main: BPATH VAR PATHLINE TYPE

Expected expression or `cycle`.

main: BPATH VAR PATHCURVE CONTROLS VAR LETAND VAR TYPE

Expected continued expression or `..`.

main: BPATH VAR PATHCURVE CONTROLS VAR TYPE

Expected continued expression or `and`.

main: BPATH VAR PATHCURVE TYPE

Expected `controls`.

main: BPATH VAR PATHLINE CYCLE TYPE

Expected `]>`.

main: BVERTGRP VERTCMD WITH
main: BHORZGRP HORZCMD WITH
main: BHORZGRP HORZCMD OMISSION WITH

BUG: expected `(`, `(|`, `[`, `?:`, `?*`, `{`, `<`, or `;`.

main: BHORZGRP HORZCMD OPTIONAL OPTIONAL

Expected `(`, `(|`, or `[`.

main: BVERTGRP VARINVERT LPAREN
main: BHORZGRP VARINHORZ LPAREN

Expected `;`.

main: BVERTGRP BVERTGRP
main: BVERTGRP VERTCMD ENDACTIVE EOI
main: BMATHGRP MATHCMD BVERTGRP BVERTGRP
main: BHORZGRP HORZCMD BVERTGRP BVERTGRP

Expected `+command` or `>`.

main: BHORZGRP HORZCMD BHORZGRP EHORZGRP LITERAL

Expected text, escape, `\command`, `#variable`, `${`, `{`, `<`, or `}`.

main: BHORZGRP ITEM SPACE SEP
main: BHORZGRP ITEM SEP

Expected text, escape, `\command`, `#variable`, `${`, `*`, or `}`.

main: BHORZGRP SEP SEP ITEM
main: BHORZGRP SEP SPACE ITEM
main: BHORZGRP SEP ITEM

Expected text, escape, `\command`, `#variable`, `${`, `|`, or `}`.

main: BHORZGRP BHORZGRP
main: BHORZGRP SPACE BHORZGRP
main: BMATHGRP MATHCMD BHORZGRP BHORZGRP
main: BHORZGRP HORZCMD BHORZGRP BHORZGRP

Expected text, escape, `\command`, `#variable`, `${`, `*`, `|`, or `}`.

main: BHORZGRP VARINHORZ ENDACTIVE BHORZGRP
main: BHORZGRP SPACE VARINHORZ ENDACTIVE BHORZGRP

Expected text, escape, `\command`, `#variable`, `${`, or `}`.

main: BHORZGRP SPACE ITEM
main: BMATHGRP MATHCMD BHORZGRP SPACE ITEM
main: BHORZGRP HORZCMD BHORZGRP SPACE ITEM

BUG: unexpected space after `{`

main: BHORZGRP BMATHGRP SUPERSCRIPT
main: BMATHGRP SUPERSCRIPT
main: BMATHGRP MATHCMD BMATHGRP SUPERSCRIPT

Expected math expression.

main: BMATHGRP MATHCMD OMISSION WITH
main: BMATHGRP MATHCMD WITH

BUG: unexpected token in math mode

main: BMATHGRP MATHCHAR SUPERSCRIPT MATHCHAR LPAREN
main: BMATHGRP MATHCHAR SUPERSCRIPT BMATHGRP LPAREN

Expected character, number, symbol, escape, `\command`, `#variable`, or `}`.

main: BMATHGRP MATHCHAR SUBSCRIPT MATHCHAR LPAREN

Expected character, number, symbol, escape, `\command`, `#variable`, `^`, or `}`.

main: BMATHGRP MATHCHAR LPAREN

Expected character, number, symbol, escape, `\command`, `#variable`, `_`, `^`, or `}`.

main: BMATHGRP MATHCHAR SUBSCRIPT LPAREN
main: BMATHGRP MATHCHAR SUPERSCRIPT LPAREN

Expected character, number, symbol, escape, `\command`, `#variable`, or `{`.







main: LAMBDA VAR DEFEQ

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LAMBDA VAR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LAMBDA WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETHORZ HORZCMD VAR ARROW

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETHORZ HORZCMD WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETHORZ VAR HORZCMD WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETHORZ VAR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETHORZ WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETMATH HORZCMD VAR ARROW

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETMATH HORZCMD WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETMATH WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETMUTABLE VAR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETMUTABLE WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETNONREC BLIST WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETNONREC LPAREN CONSTRUCTOR VAR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETNONREC LPAREN CONSTRUCTOR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETNONREC LPAREN MOD WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETNONREC LPAREN VAR AS WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETNONREC LPAREN VAR COMMA VAR COMMA WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETNONREC LPAREN VAR COMMA VAR WHEN

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETNONREC LPAREN VAR COMMA WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETNONREC LPAREN VAR CONS WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETNONREC LPAREN VAR WHEN

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETNONREC LPAREN VAR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETNONREC LPAREN WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETNONREC VAR BAR VAR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETNONREC VAR BAR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETNONREC VAR COLON VAR BAR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETNONREC VAR COLON VAR VAL

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETNONREC VAR COLON WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETNONREC VAR DEFEQ WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETNONREC VAR OPTIONAL LPAREN MOD WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETNONREC VAR OPTIONAL LPAREN WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETNONREC VAR OPTIONAL WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETNONREC VAR VAR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETNONREC VAR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETNONREC WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC LPAREN MOD RPAREN DEFEQ VAR BAR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC LPAREN MOD RPAREN DEFEQ VAR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC LPAREN MOD RPAREN DEFEQ WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC LPAREN MOD RPAREN VAR ARROW

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC LPAREN MOD RPAREN WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC LPAREN MOD WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC LPAREN WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC VAR BAR VAR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC VAR BAR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC VAR COLON BLIST ELIST HORZCMDTYPE WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC VAR COLON BLIST ELIST WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC VAR COLON BLIST VAR ARROW TYPEVAR VAL

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC VAR COLON BLIST VAR LISTPUNCT WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC VAR COLON BLIST VAR OPTIONALTYPE LISTPUNCT WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC VAR COLON BLIST VAR OPTIONALTYPE WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC VAR COLON BLIST VAR VAL

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC VAR COLON BLIST WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC VAR COLON BRECORD VAR COLON VAR LISTPUNCT WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC VAR COLON BRECORD VAR COLON VAR VAL

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC VAR COLON BRECORD VAR COLON WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC VAR COLON BRECORD VAR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC VAR COLON BRECORD WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC VAR COLON LPAREN VAR RPAREN WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC VAR COLON LPAREN VAR VAL

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC VAR COLON LPAREN WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC VAR COLON TYPEVAR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC VAR COLON VAR ARROW WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC VAR COLON VAR BAR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC VAR COLON VAR EXACT_TIMES BLIST ELIST HORZCMDTYPE WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC VAR COLON VAR EXACT_TIMES VAR EXACT_TIMES WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC VAR COLON VAR EXACT_TIMES WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC VAR COLON VAR LPAREN VAR RPAREN WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC VAR COLON VAR LPAREN VAR VAL

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC VAR COLON VAR LPAREN WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC VAR COLON VAR OPTIONALTYPE ARROW WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC VAR COLON VAR OPTIONALTYPE WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC VAR COLON VAR TYPEVAR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC VAR COLON VAR VAL

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC VAR COLON VAR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC VAR COLON WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC VAR DEFEQ VAR BAR DEFEQ VAR BAR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC VAR DEFEQ VAR BAR DEFEQ VAR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC VAR DEFEQ VAR BAR VAR ARROW

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC VAR DEFEQ VAR BAR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC VAR DEFEQ VAR LETAND WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC VAR DEFEQ VAR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC VAR VAR ARROW

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC VAR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETREC WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETVERT VAR VERTCMD WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETVERT VAR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETVERT VERTCMD VAR ARROW

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETVERT VERTCMD WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: LETVERT WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: MODULE CONSTRUCTOR COLON SIG DIRECT HORZCMD COLON VAR RPAREN

<YOUR SYNTAX ERROR MESSAGE HERE>

main: MODULE CONSTRUCTOR COLON SIG DIRECT HORZCMD COLON WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: MODULE CONSTRUCTOR COLON SIG DIRECT HORZCMD WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: MODULE CONSTRUCTOR COLON SIG DIRECT VERTCMD COLON VAR RPAREN

<YOUR SYNTAX ERROR MESSAGE HERE>

main: MODULE CONSTRUCTOR COLON SIG DIRECT VERTCMD COLON WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: MODULE CONSTRUCTOR COLON SIG DIRECT VERTCMD WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: MODULE CONSTRUCTOR COLON SIG DIRECT WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: MODULE CONSTRUCTOR COLON SIG END WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: MODULE CONSTRUCTOR COLON SIG TYPE VAR CONSTRAINT TYPEVAR CONS BRECORD VAR COLON TYPEVAR ERECORD MODULE

<YOUR SYNTAX ERROR MESSAGE HERE>

main: MODULE CONSTRUCTOR COLON SIG TYPE VAR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: MODULE CONSTRUCTOR COLON SIG TYPE WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: MODULE CONSTRUCTOR COLON SIG VAL HORZCMD COLON VAR RPAREN

<YOUR SYNTAX ERROR MESSAGE HERE>

main: MODULE CONSTRUCTOR COLON SIG VAL HORZCMD COLON WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: MODULE CONSTRUCTOR COLON SIG VAL HORZCMD WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: MODULE CONSTRUCTOR COLON SIG VAL VAR COLON VAR RPAREN

<YOUR SYNTAX ERROR MESSAGE HERE>

main: MODULE CONSTRUCTOR COLON SIG VAL VAR COLON WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: MODULE CONSTRUCTOR COLON SIG VAL VAR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: MODULE CONSTRUCTOR COLON SIG VAL VERTCMD COLON VAR RPAREN

<YOUR SYNTAX ERROR MESSAGE HERE>

main: MODULE CONSTRUCTOR COLON SIG VAL VERTCMD COLON WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: MODULE CONSTRUCTOR COLON SIG VAL VERTCMD WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: MODULE CONSTRUCTOR COLON SIG VAL WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: MODULE CONSTRUCTOR COLON SIG WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: MODULE CONSTRUCTOR COLON WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: MODULE CONSTRUCTOR DEFEQ WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: MODULE CONSTRUCTOR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: MODULE WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: TYPE TYPEVAR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: TYPE VAR DEFEQ BAR CONSTRUCTOR CONSTRAINT TYPEVAR CONS BRECORD VAR COLON TYPEVAR ERECORD VAL

<YOUR SYNTAX ERROR MESSAGE HERE>

main: TYPE VAR DEFEQ BAR CONSTRUCTOR LETAND WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: TYPE VAR DEFEQ BAR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: TYPE VAR DEFEQ CONSTRUCTOR BAR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: TYPE VAR DEFEQ CONSTRUCTOR CONSTRAINT TYPEVAR CONS BRECORD VAR COLON TYPEVAR ERECORD VAL

<YOUR SYNTAX ERROR MESSAGE HERE>

main: TYPE VAR DEFEQ CONSTRUCTOR LETAND WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: TYPE VAR DEFEQ CONSTRUCTOR OF VAR BAR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: TYPE VAR DEFEQ CONSTRUCTOR OF VAR VAL

<YOUR SYNTAX ERROR MESSAGE HERE>

main: TYPE VAR DEFEQ CONSTRUCTOR OF WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: TYPE VAR DEFEQ CONSTRUCTOR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: TYPE VAR DEFEQ VAR CONSTRAINT TYPEVAR CONS BRECORD VAR COLON TYPEVAR ERECORD VAL

<YOUR SYNTAX ERROR MESSAGE HERE>

main: TYPE VAR DEFEQ VAR CONSTRAINT TYPEVAR CONS BRECORD VAR COLON TYPEVAR ERECORD WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: TYPE VAR DEFEQ VAR CONSTRAINT TYPEVAR CONS BRECORD WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: TYPE VAR DEFEQ VAR CONSTRAINT TYPEVAR CONS WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: TYPE VAR DEFEQ VAR CONSTRAINT TYPEVAR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: TYPE VAR DEFEQ VAR CONSTRAINT WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: TYPE VAR DEFEQ VAR LETAND WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: TYPE VAR DEFEQ VAR VAL

<YOUR SYNTAX ERROR MESSAGE HERE>

main: TYPE VAR DEFEQ WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: TYPE VAR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: TYPE WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: WHILE MATCH VAR WITH BAR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: WHILE MATCH VAR WITH VAR ARROW VAR BAR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: WHILE MATCH VAR WITH VAR RPAREN

<YOUR SYNTAX ERROR MESSAGE HERE>

main: WHILE MATCH VAR WITH VAR WHEN VAR ARROW VAR BAR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: WHILE MATCH VAR WITH VAR WHEN VAR ARROW WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: WHILE MATCH VAR WITH VAR WHEN VAR WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: WHILE MATCH VAR WITH VAR WHEN WITH

<YOUR SYNTAX ERROR MESSAGE HERE>

main: WHILE MATCH VAR WITH WITH

<YOUR SYNTAX ERROR MESSAGE HERE>
